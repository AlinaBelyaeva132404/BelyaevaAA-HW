def pesheto(): ##Создаем определенную функцию
    while True:
        try:

            n = int(input("Введите число n: ")) ## Просим пользователя ввести число и преобразуем его в тип int

            A = [] ## Создаём пустой список, в который будем заносить True/False для чисел
            for i in range(n + 1): ## Перебираем числа от 0 до n включительно
                if i < 2: ## Числа 0 и 1 не являются простыми, поэтому
                    A.append(False) ## Добавляем False для 0 и 1
                else:
                    A.append(True) ## Все остальные пока считаем потенциально простыми

            i = 2 ## Начинаем проверку с первого простого числа — 2
            while i**2 <= n: ## Проверяем все числа, квадрат которых меньше или равен n
                if A[i]:  ## Если текущее число ещё не вычеркнуто (т.е. оно простое)
                    j = i**2 ## Начинаем вычеркивание с квадрата этого числа
                while j <= n: ## Пока не выйдем за пределы диапазона
                    A[j] = False ## Отмечаем кратные числа как составные (непростые)
                    j+=i ## Переходим к следующему кратному числа i
                i+=1 ## Увеличиваем i, переходим к следующему числу

            print("Простые числа не больше заданнго числа ", n, ":") ##Выводим заголовок и простые числа, разделяя их построчечно
            for i in range(2, n + 1): ## Перебираем все числа от 2 до n
                if A[i]: ## Если значение индекса числа в списке True — число простое
                    print(i, end=" \n") ## Выводим простое число (каждое с новой строки)
            repeat = input(
                "Хотите повторить (да/нет)? ").lower()  ##После выполнения функции спрашиваем пользователя, хочет ли он ввести еще одно число
            if repeat != "да":  ##Если пользователь не захотел повторять
                break  # Выход из цикла, если пользователь не хочет повторять
        except ValueError:
            print("Вы должны ввести число и единицу измерения.")  ##Если пользователь ввел не число
pesheto()  ##Запуск функции
